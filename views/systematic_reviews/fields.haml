.header=t_systematic_review_title(@review[:name], :Analysis_form)

%ul.breadcrumb
  %li
    %a{:href=>url("/review/#{@review.id}")}=@review.name
  %li{:class=>:active}=t(:Analysis_form)

:javascript
  #{@xselect.javascript}

- if @campos.empty?
  %p
    %em=t(:No_fields)
- else
  %table.table.table-bordered
    %thead
      %tr
        %th=t(:Order)
        %th=t(:Description)
        %th=t("fields.code")
        %th=t(:Type)
        %th=t(:Options)
        %th=t(:Delete)
    %tbody
      -@campos.each do |campo|
        %tr
          %td=a_editable(campo[:id], 'campo-order', "/review/edit_field/#{campo[:id]}/order", campo[:order])
          %td=a_textarea_editable(campo[:id], 'campo-description', "/review/edit_field/#{campo[:id]}/description", campo[:description])
          %td=a_editable(campo[:id], 'campo-name', "/review/edit_field/#{campo[:id]}/name", campo[:name])
          %td=@xselect.html(campo[:id], campo[:type])
          %td=a_textarea_editable(campo[:id], 'campo-options', "/review/edit_field/#{campo[:id]}/options", campo[:options])
          %td
            .btn-group.btn-group-sm
              %a.btn.btn-danger{:href=>"/review/#{@review[:id]}/field/#{campo[:id]}/delete"}
                %span.glyphicon.glyphicon-remove
                =t(:Delete)
- if auth_to('review_admin')
  %a.btn.btn-primary{:href=>"/review/#{@review[:id]}/update_field_table"}=t("fields.update_fields_table")

  %h3=t(:Field_new)
  %form{:method=>"post", :action=>"/review/#{@review[:id]}/new_field",:class=>"form-group"}
    .form-group
      %label{:for=>'order'}=t(:Order)
      %input.form-control{:type=>'number', :min=>"1",:max=>100, :name=>'order'}
    .form-group
      %label{:for=>'description'}=t(:Description)
      %input.form-control{:type=>'text', :name=>'description'}
    .form-group
      %label{:for=>'Nombre'}=t("fields.code")
      %p=t("fields.code_instructions")
      %input.form-control{:type=>'text', :name=>'name'}
    .form-group
      %label{:for=>'type'}=t(:Type)
      %select.form-control{:name=>'type'}
        - SrField::AVAILABLE_TYPES.each do |type|
          %option{:value=>type}=t("fields.#{type}")
    .form-group
      %label{:for=>'options'}=t(:Options)
      %br
      %p<= t('fields.format_instruction')
      %pre opcion1=text2;opcion2=text2...
      %input.form-control{:type=>'text', :name=>'options', :size=>20}
    %input.btn.btn-default{:type=>:submit, :value=>t(:create_new_field)}
