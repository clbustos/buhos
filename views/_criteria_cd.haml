-# review, cd, user_id, cd_criteria, open
- open||=false
- uid = "#{review[:id]}-#{cd[:id]}-#{user_id}"
- create_data=lambda {|present_type, val| {sr_id:review[:id], cd_id:cd[:id], user_id:user_id, criterion_id:val[:id], presence: present_type,  url:url("/review/criteria/cd")}}
- classes_button={ SrCriterion::INCLUSION=>{ CdCriterion::PRESENT_YES=>'btn-primary', CdCriterion::PRESENT_NO=>'btn-danger', CdCriterion::PRESENT_CANT_SAY=>'btn-warning'}, SrCriterion::EXCLUSION=>{ CdCriterion::PRESENT_YES=>'btn-danger', CdCriterion::PRESENT_NO=>'btn-primary', CdCriterion::PRESENT_CANT_SAY=>'btn-warning'}}

%div{:id=>"criteria-user-#{uid}", :style=>'margin-top:.5em'}
  %button.btn.btn-default.btn-sm{:type=>:button, :role=>:button,:data=>{:toggle=>:collapse, :target=>"#criteria-user-collapsible-#{uid}"}, :aria=>{:expanded=>false, :controls=>"criteria-user-collapsible-#{uid}"}}
    %span.glyphicon.glyphicon-list
    =t(:Inclusion_and_exclusion_criteria)
  %div.collapse{:id=>"criteria-user-collapsible-#{uid}", :class=>open ? "in":""}
    - SrCriterion::TYPES.each do |crit_type|
      -if review.criteria_hash[crit_type].nil?
        %em=t("Criteria_no_#{crit_type}")
      -else
        %strong=t("Criteria_#{crit_type}")
        %table.table.table-condensed{:style=>'width:100%'}
          - review.criteria_hash[crit_type].each do |val|
            - presence=cd_criteria[val[:id]]&.presence
            %tr
              %td{:style=>'width:50%'}=val[:text]
              %td
                .btn-group.btn-group-sm
                  -CdCriterion::PRESENT_LIST.each do |present_type|
                    %button.btn.criteria_cd_user{:class=> (presence==present_type ? classes_button[crit_type][presence] : "btn-default"), :id=>"cd_criterions-#{review[:id]}-#{cd[:id]}-#{user_id}-#{val[:id]}",
                      :data=>create_data.call(present_type, val)}=t(CdCriterion.get_name_present(present_type))
